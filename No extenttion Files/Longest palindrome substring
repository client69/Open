class Solution {
public:
    string longestPalindrome(string s) {
     
        int ans=0;
        int start=-1;
        int n=s.size();
        if(n<2)
            return s;
        
        
        for(int i=0;i<n-1;i++)
        {
            int p=1;
            int ts;
            int st=i-1,e=i+1;
            while(st>=0&&e<n)
            {
               if(s[st]==s[e])
               {  
                   ts=st;
                   p+=2;
                   
                    if(ans<p)
                    {
                       ans=p;
                       start=ts;
                     }  
                   st--;
                   e++;
               }
                else{
                    break;
                }
            }
            
           st=i;
           e=i+1;
            p=0;
            while(st>=0&&e<n)
            {
                if(s[st]==s[e])
               {  
                   ts=st;
                   p+=2;
                   
                    if(ans<p)
                    {
                       ans=p;
                       start=ts;
                     }  
                   st--;
                   e++;
               }
                else{
                    break;
                }
            }
        
            // cout<<p<<endl;
          
            
        }
        
            string out;
        if(start==-1)
        {
          out +=s[0];
            return out;
        }
        
        
    
        cout<<ans<<" "<<start<<endl;
        for(int i=start;i<ans+start;i++)
        {
            out += s[i];
        }
        cout<<out<<endl;
        return out;
        
    }
};
